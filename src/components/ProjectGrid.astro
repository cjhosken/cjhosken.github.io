---
import { getCollection } from 'astro:content';

// Get all projects and sort by date (newest first)
const allProjects = (await getCollection('blog'))
  .sort((a, b) => {
    const dateA = new Date(a.data.date).getTime();
    const dateB = new Date(b.data.date).getTime();
    return dateB - dateA;
  });

// Get all unique tags from all projects
const allTags = [...new Set(allProjects.flatMap(project => project.data.tags || []))];

const url = new URL(Astro.request.url);
const activeTag = url.searchParams.get('tag');

console.log('Active Tag:', activeTag);
const projects = activeTag
  ? allProjects.filter(p => p.data.tags?.some(tag => tag.toLowerCase() === activeTag))
  : allProjects;
---

<div class="portfolio-container">
  <!-- Tag Filter -->
  <div class="tag-filter">
    <a 
      href="?" 
      class={`tag ${!activeTag ? 'active' : ''}`}
    >
      All
    </a>
    {allTags.map(tag => (
      <a
        href={`?tag=${tag}`}
        class={`tag ${activeTag === tag ? 'active' : ''}`}
      >
        {tag}
      </a>
    ))}
  </div>

  <!-- Project Grid -->
  <div class="project-grid">
    {projects.map((project) => (
      <a href={`/blog/${project.slug}/`} class="project-card">
        <div class="card-image-container">
            <img 
              src={`/blog/${project.slug}/cover.jpg`}
              alt={project.data.title}
              loading="lazy"
              width="100%"
              height="auto"
            />
        </div>
        <div class="card-content">
          <h2>{project.data.title}</h2>
          <h3>{project.data.date.getUTCFullYear()}</h3>
          <p class="description">{project.data.description}</p>
          {project.data.tags && (
            <div class="project-tags">
              {project.data.tags
                .map(tag => (
                  <span class="tag-badge">{tag}</span>
                ))
              }
            </div>
          )}
        </div>
      </a>
    ))}
  </div>
</div>

<style>
  .portfolio-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 1rem;
  }

  .tag-filter {
    display: flex;
    justify-content: center;
    gap: 0.75rem;
    padding: 1rem 0;
    margin-bottom: 1.5rem;
    flex-wrap: wrap;
  }

  .tag {
    padding: 0.5rem 1rem;
    border-radius: 2rem;
    background: rgba(255, 255, 255, 0.1);
    color: white;
    text-decoration: none;
    font-size: 0.9rem;
    transition: all 0.2s ease;
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .tag:hover {
    background: rgba(255, 255, 255, 0.2);
  }

  .tag.active {
    background: white;
    color: black;
    font-weight: 600;
  }

  .project-grid {
    display: flex;
    max-width: 1200px;
    justify-content: center;
    align-items: center;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 2rem;
  }

  .project-card {
    text-decoration: none;
    color: white;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 1rem;
    overflow: hidden;
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
    display: flex;
    flex-direction: column;
    width: 300px;
    height: 350px;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .project-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
    border-color: rgba(255, 255, 255, 0.3);
  }

  .card-image-container {
    aspect-ratio: 16/9;
    overflow: hidden;
  }

  .card-image-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }

  .project-card:hover .card-image-container img {
    transform: scale(1.05);
  }

  .card-content {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }

  .project-card h2 {
    margin: 0 0 0.75rem 0;
    font-size: 1.25rem;
  }

  .project-card h3 {
    margin: 0 0 0.75rem 0;
    font-size: 1rem;
    font-weight: 400;
    color: rgba(255, 255, 255, 0.4);
  }

  .description {
    color: rgba(255, 255, 255, 0.7);
    margin-bottom: 1rem;
    font-size: 0.95rem;
    line-height: 1.5;
    flex-grow: 1;
  }

  .project-tags {
    display: flex;
    gap: 0.5rem;
    margin-top: 1rem;
    flex-wrap: wrap;
  }

  .tag-badge {
    padding: 0.25rem 0.75rem;
    border-radius: 2rem;
    background: rgba(255, 255, 255, 0.1);
    color: white;
    font-size: 0.75rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  @media (max-width: 768px) {
    .project-grid {
      grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
      gap: 1.5rem;
    }
  }

  @media (max-width: 480px) {
    .project-grid {
      grid-template-columns: repeat(3, 1fr);
    }

    .tag-filter {
      gap: 0.5rem;
    }

    .tag {
      padding: 0.4rem 0.8rem;
      font-size: 0.8rem;
    }
  }
</style>
